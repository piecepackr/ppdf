% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/name.r
\name{setup_by_name}
\alias{setup_by_name}
\alias{alquerque_setup_by_name}
\alias{checker_setup_by_name}
\alias{chess_setup_by_name}
\alias{domino_setup_by_name}
\alias{go_setup_by_name}
\alias{marble_setup_by_name}
\alias{morris_setup_by_name}
\alias{piecepack_setup_by_name}
\alias{reversi_setup_by_name}
\alias{stackpack_setup_by_name}
\alias{tarot_setup_by_name}
\title{Setups by game name}
\usage{
setup_by_name(
  name,
  system = known_game_systems,
  ...,
  getter = function(x) get(x, envir = getNamespace("ppdf"))
)

alquerque_setup_by_name(
  name,
  ...,
  getter = function(x) get(x, envir = getNamespace("ppdf"))
)

checker_setup_by_name(
  name,
  ...,
  getter = function(x) get(x, envir = getNamespace("ppdf"))
)

chess_setup_by_name(
  name,
  ...,
  getter = function(x) get(x, envir = getNamespace("ppdf"))
)

domino_setup_by_name(
  name,
  ...,
  getter = function(x) get(x, envir = getNamespace("ppdf"))
)

go_setup_by_name(
  name,
  ...,
  getter = function(x) get(x, envir = getNamespace("ppdf"))
)

marble_setup_by_name(
  name,
  ...,
  getter = function(x) get(x, envir = getNamespace("ppdf"))
)

morris_setup_by_name(
  name,
  ...,
  getter = function(x) get(x, envir = getNamespace("ppdf"))
)

piecepack_setup_by_name(
  name,
  ...,
  getter = function(x) get(x, envir = getNamespace("ppdf"))
)

reversi_setup_by_name(
  name,
  ...,
  getter = function(x) get(x, envir = getNamespace("ppdf"))
)

stackpack_setup_by_name(
  name,
  ...,
  getter = function(x) get(x, envir = getNamespace("ppdf"))
)

tarot_setup_by_name(
  name,
  ...,
  getter = function(x) get(x, envir = getNamespace("ppdf"))
)
}
\arguments{
\item{name}{Game name.  Will be normalized by \code{\link[=normalize_name]{normalize_name()}}.}

\item{system}{Game system.}

\item{...}{Additional arguments to pass to the underlying setup function.}

\item{getter}{Function with a single function name argument to use.
By default will just look for functions in this package but
a developer may want to consider \code{\link[=dynGet]{dynGet()}} or a
wrapper around \code{\link[=get]{get()}} with a custom \code{envir} argument.}
}
\value{
A \code{\link[tibble:tibble]{tibble::tibble()}} data frame with the following columns:
\itemize{
\item "piece_side"
\item "suit"
\item "rank"
\item "cfg" (optional, defaults to \code{"piecepack"})
\item "x"
\item "y"
\item "angle" (optional, defaults to \code{0}).
}

This data frame is compatible with \code{\link[piecepackr:render_piece]{piecepackr::render_piece()}} and likely \code{\link[ppcli:cat_piece]{ppcli::cat_piece()}}.
}
\description{
\code{setup_by_name()} returns setup data frames by game name and game system.
\code{alquerque_setup_by_name()}, \code{checker_setup_by_name()}, \code{chess_setup_by_name()},
\code{dominoes_setup_by_name()}, \code{marble_setup_by_name()}, \code{piecepack_setup_by_name()}
and \code{stackpack_setup_by_name()} are aliases that set the game system.
}
